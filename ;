<DOCTYPE html>
<html>
  <head>
    <title>the ag_deck</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    <link href="public/custom.css" type="text/css" rel="stylesheet">
  </head>
  <body>
    <textarea id="source">

class: 2-col

.column.right[
<br/>
# A Tale of Two Asyncs,
## or: How Language Values Shape the Features We Build
<br/>
<br/>
.center[Ashley Williams, [workerconf 2018]]
]

.column.left[
.overlay[and the Journeys We Take to Design Them]
![path](public/img/path1.jpg)
.caption[Fig. 1: The path looks pleasant so far]
]

[workerconf 2018]: https://worker.sh/

---
class: 2-col

.column.left[
  <br/>
  <br/>
  <br/>
  # hi, i'm [ag_dubs]
  [ag_dubs]: https://twitter.com/ag_dubs
]

.column.right[
  ![ashley dressed like a crab](public/img/crabshly.jpg)
  .caption[Fig. 2: Dressing like a crab brings me closer to the metal]
]

---
class: middle, center

.smaller[.more-padding[![nodejs](public/img/nodejs.png)]]

# board of directors

---
class: middle, center

.smaller[![i used to work at npm](public/img/realeyes.jpg)]

---
class: middle, center

.smaller[![nodetogether](public/img/nodetogether.png)]

---
class: middle, center

.smaller[![invited expert](public/img/invitedexpert.png)]

---
class: middle, center

![mozilla](public/img/mozilla.png)

---
class: middle, center

.more-padding[.smaller[![rust](public/img/rust-logo.png)]]

---
class: middle, center

![rustwasm](public/img/wasm-ferris.png)

---
class: middle, center

![rustbridge](public/img/rustbridge.jpg)

---
class: middle, center

![rustbridge](public/img/rustbridge2.jpg)

---
class: middle, center

![rustbridge](public/img/rustbridge-rbr.jpg)

---
class: middle, center

![rustbridge](public/img/rustbridge-paris.jpg)

---
class: 2-col

.column.left[
# .left[Genealogy]

In philosophy, genealogy is a historical technique in which one questions the commonly understood emergence of various philosophical and social beliefs by attempting to account for the scope, breadth or totality of discourse, thus extending the possibility of analysis... 

### .left[Moreover, a genealogy often attempts to look beyond the discourse in question toward the conditions of its possibility.]
]

.column.right[
  ![nietzsche- the genealogy of morals](public/img/nietzsche.jpg)
  .caption[Fig. 2: This mustache would like to point out you've done a bad job of questioning the origin of your values]
]

.footnote[[Wikipedia, "Genealogy (philosophy)"](https://en.wikipedia.org/wiki/Genealogy_(philosophy))]

---
class: 2-col

.column.right[
<br/>
> The point of a genealogical analysis is to show that a given system of thought was the result of contingent turns of history, not the outcome of rationally inevitable trends.
]

.column.left[
  ![foucault](public/img/foucault.jpg)
  .caption[Fig. 3: Michel Foucault is here to remind you that systems are emergent and often not a result of our conscious will]
]

.footnote[[Standford Encyclopedia of Philosophy. Michel Foucault: 3.3 From Archaeology to Geneaology](https://plato.stanford.edu/entries/foucault/?PHPSESSID=a67db9e6ad2d681797b094696328bf4a#ArchGene)]

---
class: middle, center

![shit happens](public/img/shithappens.png)
.caption[Fig. 4: She's not wrong]

.footnote[https://twitter.com/emilyst/status/1010962266609541120]

---
class: middle, center

## Geneaology is an investigation into those elements which
# "we tend to feel [are] without history"

.footnote[Foucault, Michel (1980). Language, Counter-Memory, Practice: Selected Essays and Interviews. Ithaca, NY: Cornell University Press. p. 139. ISBN 0-8014-9204-1.]

---
class: middle, center

# Programming languages are deeply complex, historical artifacts and agents

--

### ... but we rarely think of them as such

---
class: middle

![thomas kuhn](public/img/kuhn.jpg)
.caption[Fig. 7 Thomas Kuhn has trippy ideas about how ideas can and do change over time]

> Scientists work from models acquired through education and literature often without quite knowing or needing to know what characteristics have given these models the status of community paradigms.

.footnote[Kuhn, Thomas. "The Structure of Scientific Revolutions", pg 46 (1962)]

---
class: 2-col

.column.right[
  ![genealogy of programming languages](public/img/languages.png)
]

.column.left[
  <br/>
  ### .left[Evaluating the suitability of a programming language is difficult in the absence of genealogical analysis]
]

.footnote[Farooq MS, Khan SA, Ahmad F, Islam S, Abid A (2014) An Evaluation Framework and Comparative Analysis of the Widely Used First Programming Languages. PLoS ONE 9(2): e88941. https://doi.org/10.1371/journal.pone.0088941]

---
class: middle, center

# What do programming languages want?

---
class: middle, center

# .left[Programming Paradigms]

> A programming paradigm is an approach to programming a computer based on a mathematical theory or a coherent set of principles. Each paradigm supports a set of concepts that makes it the best for a certain kind of problem.

.footnote[https://www.info.ucl.ac.be/~pvr/paradigmsDIAGRAMeng108.pdf]

---
class: 2-col

.column.left[
  ![peter van roy](public/img/petervanroy.jpg)
  .caption[Fig. 6: Computer Science is very very serious]
]

.column.right[
  # The Paradigm Paradox
  > More is not better (or worse) than less, just different.
]

.footnote[[Van Roy, Peter. "Programming Paradigms for Dummies: What Every Programmer Should Know". pg 1](https://www.info.ucl.ac.be/~pvr/VanRoyChapter.pdf)]

---
class: middle, center

![priciple programming paradigms](public/img/paradigms.png)
.caption[Fig. 5: Peter Van Roy's Paradgim Genealogy]

.footnote[https://www.info.ucl.ac.be/~pvr/paradigmsDIAGRAMeng108.pdf]

---
class: middle, center

# What type of language does Node.js want to be?

---
class: middle, left

![ryan dahl](public/img/dahl1.png)
> The way we are thinking about I/O makes things difficult

.footnote[[Ryan Dahl: Original Node.js presentation (JSConf 2009). JS Conf EU.Published 8 Jun 2012.](https://www.youtube.com/watch?v=ztspvPYybIY)]

---
class: middle, center

"Threaded concurrency is a leaky abstraction. It creates pains. You have memory problems. It's hard to think about. It's not a good abstraction for what's happening on your computer."

.footnote[[Ryan Dahl: Original Node.js presentation (JSConf 2009). JS Conf EU.Published 8 Jun 2012.](https://www.youtube.com/watch?v=ztspvPYybIY)]

---
class: middle, center

"Callbacks is how I/O should work."

---
class: middle, center

"JavaScript was designed specifically to be used with an event loop. The culture of JavaScript is already geared towards evented programming."

---
class: middle, center

### Node.js wants...

# To provide a purely evented, non-blocking infrastructure to script highly concurrent programs

---
class: middle, center

# Design Goals

### No function should perform direct I/O, to receive info from disk, network, or another process, there must be a callback

### Low level. Stream everything. Do not remove functionality present at the PSIX layer.

### Have built-in support for the most important protocols: TCP, DNS, HTTP.

### Support many HTTP features.

### The API should be familiar to client-side JS programmers and old school UNIX hackers. Be platform independent. Don't reinvent.

---
class: middle, center

# special `process` object

The `process` object emits events when it receives a signal. Like in the DOM,
you need only add a listener to catch them.

All objects which emit events are instances of `process.EventEmitter`

---
class: middle, center

# Evented programming is the primary paradigm for Node.js

---
class: middle, center

# concurrency vs memory

---
class: middle, center

# What type of language does Rust want to be?

---
class: middle, center

# Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.

.footnote[https://www.rust-lang.org/]

---
class: middle, center

# Rust is a ??????? ??????????? ???????? ???? ???? ????????? ????, ???????? ?????????, ??? ????????? ????? ??????.

---
class: middle, center

![sorry we're close](public/img/sorrywereclose.jpg)

---
class: middle, center

![sorry we're close](public/img/sorrywereclosetothemetal.jpg)

---
class: middle, center

![sorry we're close](public/img/sorrynotsorry.jpg)

---
class: middle, center

# Rust has no run time

---

# rust wants to be a first class server side language

---

# asynchronous programming

---

# developer experience

---

# node.js governance

---

# rust governance

---

# commincating vision is critical

---

# https://terrytao.wordpress.com/career-advice/theres-more-to-mathematics-than-rigour-and-proofs/

---
class: 2-col

.column.left[
  ![naming](public/img/naming1.png)
  .caption[Fig. X: I'd laugh, but tbh 30min is pretty reasonable]
]

.column.right[
  # .right[Instead of (nervously?) laughing off how difficult language design is...]
]

.footnote[https://twitter.com/tlakomy/status/968128289830301696]

---
class: middle, center

![naming](public/img/naming2.png)

.footnote[https://twitter.com/ag_dubs/status/968523354713088005]

    </textarea>
    <script src="public/remark.js" type="text/javascript"></script>
    <script type="text/javascript">
      var slideshow = remark.create();
    </script>
  </body>
</html>
